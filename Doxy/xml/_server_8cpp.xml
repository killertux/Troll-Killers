<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="_server_8cpp" kind="file" language="C++">
    <compoundname>Server.cpp</compoundname>
    <includes refid="_server_8hpp" local="yes">Server.hpp</includes>
    <incdepgraph>
      <node id="1900">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="1916">
        <label>IGObject.hpp</label>
        <link refid="_i_g_object_8hpp"/>
        <childnode refid="1909" relation="include">
        </childnode>
        <childnode refid="1912" relation="include">
        </childnode>
      </node>
      <node id="1911">
        <label>stdint.h</label>
      </node>
      <node id="1897">
        <label>/home/clemente/projects/Troll-Killers/Server.cpp</label>
        <link refid="Server.cpp"/>
        <childnode refid="1898" relation="include">
        </childnode>
      </node>
      <node id="1909">
        <label>Enums.hpp</label>
        <link refid="_enums_8hpp"/>
      </node>
      <node id="1910">
        <label>_object.hpp</label>
        <link refid="__object_8hpp"/>
        <childnode refid="1911" relation="include">
        </childnode>
      </node>
      <node id="1901">
        <label>string</label>
      </node>
      <node id="1899">
        <label>boost/thread.hpp</label>
      </node>
      <node id="1915">
        <label>fstream</label>
      </node>
      <node id="1898">
        <label>Server.hpp</label>
        <link refid="_server_8hpp"/>
        <childnode refid="1899" relation="include">
        </childnode>
        <childnode refid="1900" relation="include">
        </childnode>
        <childnode refid="1901" relation="include">
        </childnode>
        <childnode refid="1902" relation="include">
        </childnode>
        <childnode refid="1903" relation="include">
        </childnode>
        <childnode refid="1904" relation="include">
        </childnode>
        <childnode refid="1907" relation="include">
        </childnode>
        <childnode refid="1916" relation="include">
        </childnode>
        <childnode refid="1917" relation="include">
        </childnode>
        <childnode refid="1918" relation="include">
        </childnode>
        <childnode refid="1914" relation="include">
        </childnode>
      </node>
      <node id="1908">
        <label>Map.hpp</label>
        <link refid="_map_8hpp"/>
        <childnode refid="1909" relation="include">
        </childnode>
        <childnode refid="1910" relation="include">
        </childnode>
        <childnode refid="1912" relation="include">
        </childnode>
        <childnode refid="1913" relation="include">
        </childnode>
        <childnode refid="1914" relation="include">
        </childnode>
        <childnode refid="1915" relation="include">
        </childnode>
      </node>
      <node id="1920">
        <label>string.h</label>
      </node>
      <node id="1912">
        <label>_data.hpp</label>
        <link refid="__data_8hpp"/>
        <childnode refid="1911" relation="include">
        </childnode>
        <childnode refid="1903" relation="include">
        </childnode>
      </node>
      <node id="1902">
        <label>stack</label>
      </node>
      <node id="1917">
        <label>SCharacter.hpp</label>
        <link refid="_s_character_8hpp"/>
        <childnode refid="1916" relation="include">
        </childnode>
        <childnode refid="1909" relation="include">
        </childnode>
        <childnode refid="1910" relation="include">
        </childnode>
        <childnode refid="1912" relation="include">
        </childnode>
        <childnode refid="1906" relation="include">
        </childnode>
        <childnode refid="1914" relation="include">
        </childnode>
      </node>
      <node id="1904">
        <label>Connection.hpp</label>
        <link refid="_connection_8hpp"/>
        <childnode refid="1905" relation="include">
        </childnode>
        <childnode refid="1906" relation="include">
        </childnode>
        <childnode refid="1901" relation="include">
        </childnode>
        <childnode refid="1903" relation="include">
        </childnode>
      </node>
      <node id="1913">
        <label>sstream</label>
      </node>
      <node id="1907">
        <label>SMap.hpp</label>
        <link refid="_s_map_8hpp"/>
        <childnode refid="1908" relation="include">
        </childnode>
      </node>
      <node id="1906">
        <label>iostream</label>
      </node>
      <node id="1918">
        <label>Configuration.hpp</label>
        <link refid="_configuration_8hpp"/>
        <childnode refid="1919" relation="include">
        </childnode>
        <childnode refid="1920" relation="include">
        </childnode>
      </node>
      <node id="1914">
        <label>Defines.hpp</label>
        <link refid="_defines_8hpp"/>
      </node>
      <node id="1905">
        <label>enet/enet.h</label>
      </node>
      <node id="1919">
        <label>stdio.h</label>
      </node>
      <node id="1903">
        <label>cstring</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_server_8hpp" kindref="compound">Server.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3" refid="class_server_1ad5ec9462b520e59f7ea831e157ee5e59" refkind="member"><highlight class="normal"><ref refid="class_server_1ad5ec9462b520e59f7ea831e157ee5e59" kindref="member">Server::Server</ref>(){</highlight></codeline>
<codeline lineno="4"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[255];</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/>config.<ref refid="class_configuration_1aed21dbeb0bcb1de61389deee612d9074" kindref="member">config_load</ref>(</highlight><highlight class="stringliteral">&quot;server.cfg&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/>config.<ref refid="class_configuration_1a8a66e437127dfe28d70690d53f6dfd7f" kindref="member">config_get</ref>(buffer,</highlight><highlight class="stringliteral">&quot;Port&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>port=strtol(buffer,NULL,0);</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>config.<ref refid="class_configuration_1a8a66e437127dfe28d70690d53f6dfd7f" kindref="member">config_get</ref>(buffer,</highlight><highlight class="stringliteral">&quot;Users&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>users=strtol(buffer,NULL,0);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>config.<ref refid="class_configuration_1a8a66e437127dfe28d70690d53f6dfd7f" kindref="member">config_get</ref>(buffer,</highlight><highlight class="stringliteral">&quot;Map&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Creating<sp/>the<sp/>server...\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>conn.<ref refid="class_connection_1acdb1c6f1844698b2688cb611f7029d7c" kindref="member">create_server</ref>(port,users);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Server<sp/>created!<sp/>\nListening<sp/>to<sp/>the<sp/>port<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>port<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>players<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_s_character" kindref="compound">SCharacter</ref>*[users];</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;users;i++)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>players[i]=NULL;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!map.<ref refid="class_map_1a259bb70652389b9ecf0bc76ceca656a5" kindref="member">load_map</ref>(buffer)){</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>loading<sp/>the<sp/>map\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(0);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>map.<ref refid="class_s_map_1a6ef62d8e6b17c21f21c535a4139e230e" kindref="member">calculateSpawn</ref>();</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>blueTeamN=0;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>redTeamN=0;</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="class_server_1a4b3aa2579cb1c8cd1d069582c14d0fa6" refkind="member"><highlight class="normal"><ref refid="class_server_1a4b3aa2579cb1c8cd1d069582c14d0fa6" kindref="member">Server::~Server</ref>(){</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>writeThread;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>players;</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="class_server_1a47beb8398c78f8ce814d8f3961880add" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_server_1a47beb8398c78f8ce814d8f3961880add" kindref="member">Server::main_loop</ref>(){</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__msg" kindref="compound">_msg</ref><sp/>msgTmp;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__data" kindref="compound">_data</ref><sp/>senderBuffer;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>done=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>writeThread=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>boost::thread(&amp;Server::user_handle,</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!done){</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataMu.lock();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(conn.<ref refid="class_connection_1a67a66948fd3b286a0a4faaaedb69e56e" kindref="member">event_service</ref>(1/<ref refid="_defines_8hpp_1ac92ca5ab87034a348decad7ee8d4bd1b" kindref="member">FPS</ref>)&gt;0){</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newMu.lock();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(conn.<ref refid="class_connection_1ab0db0e5c8463aca4ec668107b1a46349" kindref="member">event_type_receive</ref>()){</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newMu.unlock();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::sprintf(msgTmp.<ref refid="struct__msg_1a470db8b42735763fc80e93590da2eaf4" kindref="member">buffer</ref>,</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)conn.<ref refid="class_connection_1a2431e1403029cf660aa897eba8ec978a" kindref="member">getPacketData</ref>());</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msgTmp.<ref refid="struct__msg_1a5319cda008478b61e06ddf06c2cf166e" kindref="member">id</ref>=conn.<ref refid="class_connection_1a6a9cbc7d881550fcc0e768e3ee7bf171" kindref="member">getPeerId</ref>();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msgs.push(msgTmp);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>newMu.unlock();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(conn.<ref refid="class_connection_1a75f10c526b51675497a81e1f2c26ba9e" kindref="member">event_type_connect</ref>()){</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::thread<sp/>newUser(&amp;Server::new_user,</highlight><highlight class="keyword">this</highlight><highlight class="normal">,conn.<ref refid="class_connection_1a6a9cbc7d881550fcc0e768e3ee7bf171" kindref="member">getPeerId</ref>());</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newUser.detach();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Id<sp/>we<sp/>don&apos;t<sp/>do<sp/>this.<sp/>The<sp/>main<sp/>thread<sp/>will<sp/>shutdown<sp/>after<sp/>the<sp/>newUser<sp/>thread<sp/>is<sp/>closed;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(conn.<ref refid="class_connection_1a58f2ca9fedd8369ebdf61725f31123ef" kindref="member">event_type_disconnect</ref>()){</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Someone<sp/>disconected!\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(players[conn.<ref refid="class_connection_1a6a9cbc7d881550fcc0e768e3ee7bf171" kindref="member">getPeerId</ref>()]-&gt;<ref refid="class_s_character_1a4384f9f73da73ddb603d4d85fdae00d7" kindref="member">getTeam</ref>()==<ref refid="_enums_8hpp_1a9c13bb5b1d69698f9b47900990eaa598af80f9a890089d211842d59625e561f88" kindref="member">RED</ref>)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>redTeamN--;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blueTeamN--;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>players[conn.<ref refid="class_connection_1a6a9cbc7d881550fcc0e768e3ee7bf171" kindref="member">getPeerId</ref>()];</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>players[conn.<ref refid="class_connection_1a6a9cbc7d881550fcc0e768e3ee7bf171" kindref="member">getPeerId</ref>()]=NULL;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>senderBuffer.<ref refid="struct__data_1afa7c65aa86c5c877d1b23746b27f7ccd" kindref="member">type</ref>=<ref refid="_defines_8hpp_1a2141c224a3cefce061389c2790c8108e" kindref="member">PROTOCOL_DISCONNECT</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::sprintf(senderBuffer.<ref refid="struct__data_1abcb37fabf89158d59a0469a376d2d5f8" kindref="member">buffer</ref>,</highlight><highlight class="stringliteral">&quot;%d<sp/>&quot;</highlight><highlight class="normal">,(int16_t)conn.<ref refid="class_connection_1a6a9cbc7d881550fcc0e768e3ee7bf171" kindref="member">getPeerId</ref>());</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn.<ref refid="class_connection_1a2d554f43b1e9d4a71acdd1ba297fc11b" kindref="member">broadcast_packet</ref>(&amp;senderBuffer,strlen(senderBuffer.<ref refid="struct__data_1abcb37fabf89158d59a0469a376d2d5f8" kindref="member">buffer</ref>)+2);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataMu.unlock();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>writeThread-&gt;join();</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Server::new_user(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>done=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__msg" kindref="compound">_msg</ref><sp/>msgTmp;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__data" kindref="compound">_data</ref><sp/>*recieverBuffer;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__data" kindref="compound">_data</ref><sp/>senderBuffer;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[2048];</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Someone<sp/>connected!<sp/>Id=&quot;</highlight><highlight class="normal">&lt;&lt;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>senderBuffer.<ref refid="struct__data_1afa7c65aa86c5c877d1b23746b27f7ccd" kindref="member">type</ref>=<ref refid="_defines_8hpp_1abac12aa2e8539d5db407c84aaf153775" kindref="member">PROTOCOL_N_PEERS</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>senderBuffer.<ref refid="struct__data_1abcb37fabf89158d59a0469a376d2d5f8" kindref="member">buffer</ref>[0]=users<sp/>&amp;<sp/>0xff;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>senderBuffer.<ref refid="struct__data_1abcb37fabf89158d59a0469a376d2d5f8" kindref="member">buffer</ref>[1]=</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&amp;<sp/>0xff;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>dataMu.lock();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>conn.<ref refid="class_connection_1a3dda26c4c789d0f5e54fb50cae606022" kindref="member">send_packet_reliable</ref>(&amp;senderBuffer,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(senderBuffer),</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>players[id]=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_s_character" kindref="compound">SCharacter</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>dataMu.unlock();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Waiting<sp/>for<sp/>his<sp/>gun..\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!done){</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataMu.lock();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//while(msgs.size()&gt;0){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(msgs.size()&gt;0){</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msgTmp=msgs.top();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(((<ref refid="struct__data" kindref="compound">_data</ref>*)msgTmp.<ref refid="struct__msg_1a470db8b42735763fc80e93590da2eaf4" kindref="member">buffer</ref>)-&gt;type==<ref refid="_defines_8hpp_1a8b3aa215e1dce2cab89f0f46876c4863" kindref="member">PROTOCOL_MY_WEAPON</ref><sp/>&amp;&amp;<sp/>msgTmp.<ref refid="struct__msg_1a5319cda008478b61e06ddf06c2cf166e" kindref="member">id</ref>==</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>stream;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/>myWeapon;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;((<ref refid="struct__data" kindref="compound">_data</ref>*)msgTmp.<ref refid="struct__msg_1a470db8b42735763fc80e93590da2eaf4" kindref="member">buffer</ref>)-&gt;buffer;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>&gt;&gt;<sp/>myWeapon;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>players[id]-&gt;<ref refid="class_s_character_1a91f39c3163ed5bbadf6d49c6b69d52f6" kindref="member">setMyWeapon</ref>((<ref refid="_enums_8hpp_1ad9700e9db9d62004af4a04e4e13912c5" kindref="member">Weapon</ref>)myWeapon);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msgs.pop();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>done=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataMu.unlock();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Sending<sp/>the<sp/>map...\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>size=map.<ref refid="class_map_1ac85777e48836aa23c8c7adac7ea50ea8" kindref="member">serialize</ref>(buffer);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>size<sp/>&lt;&lt;<sp/>&quot;<sp/>-<sp/>&quot;<sp/>&lt;&lt;<sp/>buffer<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>dataMu.lock();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>conn.<ref refid="class_connection_1a3dda26c4c789d0f5e54fb50cae606022" kindref="member">send_packet_reliable</ref>(buffer,size,</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>conn.<ref refid="class_connection_1ace9a66bd4a77270df4587df1405d4033" kindref="member">send_flush</ref>();</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>dataMu.unlock();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Get<sp/>the<sp/>spawn<sp/>area</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Sending<sp/>the<sp/>spawn...\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">_object</ref>*<sp/>spawn;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(blueTeamN&gt;redTeamN){</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>done=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>redTeamN++;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newMu.lock();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>players[id]-&gt;<ref refid="class_s_character_1a50249c9fdf9c98080fce5d9ff0e944ca" kindref="member">setTeam</ref>(<ref refid="_enums_8hpp_1a9c13bb5b1d69698f9b47900990eaa598af80f9a890089d211842d59625e561f88" kindref="member">RED</ref>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newMu.unlock();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!done){</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spawn=map.<ref refid="class_s_map_1a3577067cfaf16adb3afd60c30f7093b7" kindref="member">getSpaw</ref>();</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(spawn-&gt;<ref refid="struct__object_1af5318fcc501c7951e1bf261de6c29b3b" kindref="member">r</ref>!=0){</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(map.<ref refid="class_s_map_1a951815986813fc94884108ee2b72a4f1" kindref="member">useSpawn</ref>(spawn)){</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>stream;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>senderBuffer.<ref refid="struct__data_1afa7c65aa86c5c877d1b23746b27f7ccd" kindref="member">type</ref>=<ref refid="_defines_8hpp_1affb5a969dac2f0b538edbf63898ec9ce" kindref="member">PROTOCOL_SET_POS_TEAM</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>spawn-&gt;<ref refid="struct__object_1adb6e178c2aa0bc48f5db6d85106c1680" kindref="member">x</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>spawn-&gt;<ref refid="struct__object_1a48f88904fef6cb2f4ea22029174d76bc" kindref="member">y</ref>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;(int16_t)<ref refid="_enums_8hpp_1a9c13bb5b1d69698f9b47900990eaa598af80f9a890089d211842d59625e561f88" kindref="member">RED</ref>&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::sprintf(senderBuffer.<ref refid="struct__data_1abcb37fabf89158d59a0469a376d2d5f8" kindref="member">buffer</ref>,</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,stream.str().c_str());</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataMu.lock();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn.<ref refid="class_connection_1a3dda26c4c789d0f5e54fb50cae606022" kindref="member">send_packet_reliable</ref>(&amp;senderBuffer,(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(senderBuffer),</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataMu.unlock();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>done=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>done=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blueTeamN++;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newMu.lock();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>players[id]-&gt;<ref refid="class_s_character_1a50249c9fdf9c98080fce5d9ff0e944ca" kindref="member">setTeam</ref>(<ref refid="_enums_8hpp_1a9c13bb5b1d69698f9b47900990eaa598a35d6719cb4d7577c031b3d79057a1b79" kindref="member">BLUE</ref>);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newMu.unlock();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!done){</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spawn=map.<ref refid="class_s_map_1a3577067cfaf16adb3afd60c30f7093b7" kindref="member">getSpaw</ref>();</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(spawn-&gt;<ref refid="struct__object_1a104af22ae68294943efb54edb7a46b0e" kindref="member">b</ref>!=0){</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(map.<ref refid="class_s_map_1a951815986813fc94884108ee2b72a4f1" kindref="member">useSpawn</ref>(spawn)){</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>stream;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>senderBuffer.<ref refid="struct__data_1afa7c65aa86c5c877d1b23746b27f7ccd" kindref="member">type</ref>=<ref refid="_defines_8hpp_1affb5a969dac2f0b538edbf63898ec9ce" kindref="member">PROTOCOL_SET_POS_TEAM</ref>;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>spawn-&gt;<ref refid="struct__object_1adb6e178c2aa0bc48f5db6d85106c1680" kindref="member">x</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>spawn-&gt;<ref refid="struct__object_1a48f88904fef6cb2f4ea22029174d76bc" kindref="member">y</ref>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;(int16_t)<ref refid="_enums_8hpp_1a9c13bb5b1d69698f9b47900990eaa598a35d6719cb4d7577c031b3d79057a1b79" kindref="member">BLUE</ref>&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::sprintf(senderBuffer.<ref refid="struct__data_1abcb37fabf89158d59a0469a376d2d5f8" kindref="member">buffer</ref>,</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,stream.str().c_str());</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataMu.lock();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn.<ref refid="class_connection_1a3dda26c4c789d0f5e54fb50cae606022" kindref="member">send_packet_reliable</ref>(&amp;senderBuffer,(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(senderBuffer),</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataMu.unlock();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>done=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//send<sp/>to<sp/>everyone<sp/>else<sp/>that<sp/>I<sp/>exist;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>stream;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>senderBuffer.<ref refid="struct__data_1afa7c65aa86c5c877d1b23746b27f7ccd" kindref="member">type</ref>=<ref refid="_defines_8hpp_1a607c7e7a8d4594497a05a234346a1218" kindref="member">PROTOCOL_NEW_USER</ref>;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>(int16_t)</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/>&lt;&lt;<sp/>spawn-&gt;<ref refid="struct__object_1adb6e178c2aa0bc48f5db6d85106c1680" kindref="member">x</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>spawn-&gt;<ref refid="struct__object_1a48f88904fef6cb2f4ea22029174d76bc" kindref="member">y</ref>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;(int16_t)players[id]-&gt;<ref refid="class_s_character_1a4384f9f73da73ddb603d4d85fdae00d7" kindref="member">getTeam</ref>()&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;players[id]-&gt;<ref refid="class_s_character_1ab1ffdf2103c6277f1ff34c7b48920320" kindref="member">getMyWeapon</ref>()&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>std::sprintf(senderBuffer.<ref refid="struct__data_1abcb37fabf89158d59a0469a376d2d5f8" kindref="member">buffer</ref>,</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,stream.str().c_str());</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(players[</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">]-&gt;getMyWeapon()==(int16_t)<ref refid="_enums_8hpp_1ad9700e9db9d62004af4a04e4e13912c5aa270a057ccaf7cd6cb766319015e8b3d" kindref="member">PISTOL</ref>)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Pistol!\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(players[</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">]-&gt;getMyWeapon()==(int16_t)<ref refid="_enums_8hpp_1ad9700e9db9d62004af4a04e4e13912c5a69c752dd5a2fd5c747410d696d62bae7" kindref="member">RIFLE</ref>)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Rifle!\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>dataMu.lock();</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;users;i++)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(players[i]!=NULL<sp/>&amp;&amp;<sp/>players[i]-&gt;getReady()){</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn.<ref refid="class_connection_1a3dda26c4c789d0f5e54fb50cae606022" kindref="member">send_packet_reliable</ref>(&amp;senderBuffer,(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(senderBuffer),i);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>dataMu.unlock();</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Send<sp/>who<sp/>else<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>senderBuffer.<ref refid="struct__data_1afa7c65aa86c5c877d1b23746b27f7ccd" kindref="member">type</ref>=<ref refid="_defines_8hpp_1a607c7e7a8d4594497a05a234346a1218" kindref="member">PROTOCOL_NEW_USER</ref>;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>dataMu.lock();</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;users;i++)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(players[i]!=NULL<sp/>&amp;&amp;<sp/>players[i]-&gt;getReady()){</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>stream;;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>players[i]-&gt;<ref refid="class_s_character_1aed3654ba330a24ac0990047e56bccd32" kindref="member">getId</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/>&lt;&lt;<sp/>players[i]-&gt;<ref refid="class_s_character_1a023df9332c559507d8986facbb37dcad" kindref="member">getX</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>players[i]-&gt;<ref refid="class_s_character_1acbdd136e3a70a94f2f08c7158f042de6" kindref="member">getY</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;(int16_t)players[i]-&gt;getTeam()&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;players[i]-&gt;<ref refid="class_s_character_1ab1ffdf2103c6277f1ff34c7b48920320" kindref="member">getMyWeapon</ref>()&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::sprintf(senderBuffer.<ref refid="struct__data_1abcb37fabf89158d59a0469a376d2d5f8" kindref="member">buffer</ref>,</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,stream.str().c_str());</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn.<ref refid="class_connection_1a3dda26c4c789d0f5e54fb50cae606022" kindref="member">send_packet_reliable</ref>(&amp;senderBuffer,(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(senderBuffer),</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>conn.<ref refid="class_connection_1ace9a66bd4a77270df4587df1405d4033" kindref="member">send_flush</ref>();</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>dataMu.unlock();</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>newMu.lock();</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>players[id]-&gt;<ref refid="class_s_character_1a410a1a3d599fc8e91252805ce4c50f10" kindref="member">setX</ref>(spawn-&gt;<ref refid="struct__object_1adb6e178c2aa0bc48f5db6d85106c1680" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>players[id]-&gt;<ref refid="class_s_character_1a7034f78acd75a886ecd02912b20ddcde" kindref="member">setY</ref>(spawn-&gt;<ref refid="struct__object_1a48f88904fef6cb2f4ea22029174d76bc" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>players[id]-&gt;<ref refid="class_s_character_1a4537343129f515509139a762f4d04390" kindref="member">make_ready</ref>();</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>newMu.unlock();</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Client<sp/>ready<sp/>to<sp/>play\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Server::user_handle(){</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>done=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__msg" kindref="compound">_msg</ref><sp/>msgTmp;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__data" kindref="compound">_data</ref><sp/>*recieverBuffer;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__data" kindref="compound">_data</ref><sp/>senderBuffer;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!done){</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataMu.lock();<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//I<sp/>know,<sp/>I<sp/>shouldn&apos;t<sp/>do<sp/>that....<sp/>But<sp/>fuck<sp/>that<sp/>shit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(msgs.size()&gt;0){</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msgTmp=msgs.top();</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(((<ref refid="struct__data" kindref="compound">_data</ref>*)msgTmp.<ref refid="struct__msg_1a470db8b42735763fc80e93590da2eaf4" kindref="member">buffer</ref>)-&gt;type==<ref refid="_defines_8hpp_1ae7679bcf35d9a7f62b18c8ca58bccf18" kindref="member">PROTOCOL_CHARACTER</ref>){</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/>x,y,dir;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>angle;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>stream;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>((<ref refid="struct__data" kindref="compound">_data</ref>*)msgTmp.<ref refid="struct__msg_1a470db8b42735763fc80e93590da2eaf4" kindref="member">buffer</ref>)-&gt;buffer;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>&gt;&gt;<sp/>x<sp/>&gt;&gt;<sp/>y<sp/>&gt;&gt;<sp/>dir<sp/>&gt;&gt;<sp/>angle;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>players[msgTmp.<ref refid="struct__msg_1a5319cda008478b61e06ddf06c2cf166e" kindref="member">id</ref>]-&gt;<ref refid="class_s_character_1a410a1a3d599fc8e91252805ce4c50f10" kindref="member">setX</ref>(x);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>players[msgTmp.<ref refid="struct__msg_1a5319cda008478b61e06ddf06c2cf166e" kindref="member">id</ref>]-&gt;<ref refid="class_s_character_1a7034f78acd75a886ecd02912b20ddcde" kindref="member">setY</ref>(y);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>players[msgTmp.<ref refid="struct__msg_1a5319cda008478b61e06ddf06c2cf166e" kindref="member">id</ref>]-&gt;<ref refid="class_s_character_1a435234e99c79e6094daa3c554033d4ae" kindref="member">setDir</ref>((<ref refid="_enums_8hpp_1a224b9163917ac32fc95a60d8c1eec3aa" kindref="member">Direction</ref>)dir);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;users;i++)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i!=msgTmp.<ref refid="struct__msg_1a5319cda008478b61e06ddf06c2cf166e" kindref="member">id</ref><sp/>&amp;&amp;<sp/>players[i]!=NULL<sp/>&amp;&amp;<sp/>players[i]-&gt;getReady()){</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>stream;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>senderBuffer.<ref refid="struct__data_1afa7c65aa86c5c877d1b23746b27f7ccd" kindref="member">type</ref>=<ref refid="_defines_8hpp_1ae7679bcf35d9a7f62b18c8ca58bccf18" kindref="member">PROTOCOL_CHARACTER</ref>;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>msgTmp.<ref refid="struct__msg_1a5319cda008478b61e06ddf06c2cf166e" kindref="member">id</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>x<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>y<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dir<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>angle<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::sprintf(senderBuffer.<ref refid="struct__data_1abcb37fabf89158d59a0469a376d2d5f8" kindref="member">buffer</ref>,</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,stream.str().c_str());</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn.<ref refid="class_connection_1a194e26770302ecac113375475df57e42" kindref="member">send_packet_unreliable</ref>(&amp;senderBuffer,strlen(senderBuffer.<ref refid="struct__data_1abcb37fabf89158d59a0469a376d2d5f8" kindref="member">buffer</ref>)+2,i);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msgs.pop();</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn.<ref refid="class_connection_1ace9a66bd4a77270df4587df1405d4033" kindref="member">send_flush</ref>();</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(((<ref refid="struct__data" kindref="compound">_data</ref>*)msgTmp.<ref refid="struct__msg_1a470db8b42735763fc80e93590da2eaf4" kindref="member">buffer</ref>)-&gt;type==<ref refid="_defines_8hpp_1abfd5abb7db0c7238febbc9197c051da7" kindref="member">PROTOCOL_NEW_SHOOT</ref>){</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/>bulletId,x,y,length,velocity;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>angle;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>stream;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>((<ref refid="struct__data" kindref="compound">_data</ref>*)msgTmp.<ref refid="struct__msg_1a470db8b42735763fc80e93590da2eaf4" kindref="member">buffer</ref>)-&gt;buffer;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>&gt;&gt;<sp/>bulletId<sp/>&gt;&gt;<sp/>x<sp/>&gt;&gt;<sp/>y<sp/>&gt;&gt;length<sp/>&gt;&gt;velocity<sp/>&gt;&gt;<sp/>angle;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;users;i++)</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i!=msgTmp.<ref refid="struct__msg_1a5319cda008478b61e06ddf06c2cf166e" kindref="member">id</ref><sp/>&amp;&amp;<sp/>players[i]!=NULL<sp/>&amp;&amp;<sp/>players[i]-&gt;getReady()){</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>stream;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>senderBuffer.<ref refid="struct__data_1afa7c65aa86c5c877d1b23746b27f7ccd" kindref="member">type</ref>=<ref refid="_defines_8hpp_1abfd5abb7db0c7238febbc9197c051da7" kindref="member">PROTOCOL_NEW_SHOOT</ref>;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>msgTmp.<ref refid="struct__msg_1a5319cda008478b61e06ddf06c2cf166e" kindref="member">id</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>bulletId<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>x<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>y<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>length<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;velocity<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;angle<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::sprintf(senderBuffer.<ref refid="struct__data_1abcb37fabf89158d59a0469a376d2d5f8" kindref="member">buffer</ref>,</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,stream.str().c_str());</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn.<ref refid="class_connection_1a3dda26c4c789d0f5e54fb50cae606022" kindref="member">send_packet_reliable</ref>(&amp;senderBuffer,strlen(senderBuffer.<ref refid="struct__data_1abcb37fabf89158d59a0469a376d2d5f8" kindref="member">buffer</ref>)+2,i);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msgs.pop();</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn.<ref refid="class_connection_1ace9a66bd4a77270df4587df1405d4033" kindref="member">send_flush</ref>();</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(((<ref refid="struct__data" kindref="compound">_data</ref>*)msgTmp.<ref refid="struct__msg_1a470db8b42735763fc80e93590da2eaf4" kindref="member">buffer</ref>)-&gt;type==<ref refid="_defines_8hpp_1ad9bc32817eb02e714806d967f02a0849" kindref="member">PROTOCOL_DELETE_BULLET</ref>){</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/>id;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>stream;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>((<ref refid="struct__data" kindref="compound">_data</ref>*)msgTmp.<ref refid="struct__msg_1a470db8b42735763fc80e93590da2eaf4" kindref="member">buffer</ref>)-&gt;buffer;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>&gt;&gt;<sp/>id;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;users;i++)</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i!=msgTmp.<ref refid="struct__msg_1a5319cda008478b61e06ddf06c2cf166e" kindref="member">id</ref><sp/>&amp;&amp;<sp/>players[i]!=NULL<sp/>&amp;&amp;<sp/>players[i]-&gt;getReady()){</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>stream;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>senderBuffer.<ref refid="struct__data_1afa7c65aa86c5c877d1b23746b27f7ccd" kindref="member">type</ref>=<ref refid="_defines_8hpp_1ad9bc32817eb02e714806d967f02a0849" kindref="member">PROTOCOL_DELETE_BULLET</ref>;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>msgTmp.<ref refid="struct__msg_1a5319cda008478b61e06ddf06c2cf166e" kindref="member">id</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::sprintf(senderBuffer.<ref refid="struct__data_1abcb37fabf89158d59a0469a376d2d5f8" kindref="member">buffer</ref>,</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,stream.str().c_str());</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn.<ref refid="class_connection_1a3dda26c4c789d0f5e54fb50cae606022" kindref="member">send_packet_reliable</ref>(&amp;senderBuffer,strlen(senderBuffer.<ref refid="struct__data_1abcb37fabf89158d59a0469a376d2d5f8" kindref="member">buffer</ref>)+2,i);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msgs.pop();</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn.<ref refid="class_connection_1ace9a66bd4a77270df4587df1405d4033" kindref="member">send_flush</ref>();</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(((<ref refid="struct__data" kindref="compound">_data</ref>*)msgTmp.<ref refid="struct__msg_1a470db8b42735763fc80e93590da2eaf4" kindref="member">buffer</ref>)-&gt;type==<ref refid="_defines_8hpp_1a4fb7e7cfa1e05039d679f0275c48ca03" kindref="member">PROTOCOL_REVIVE</ref>){</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/>x,y;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>stream;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>((<ref refid="struct__data" kindref="compound">_data</ref>*)msgTmp.<ref refid="struct__msg_1a470db8b42735763fc80e93590da2eaf4" kindref="member">buffer</ref>)-&gt;buffer;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>&gt;&gt;<sp/>x<sp/>&gt;&gt;y;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;users;i++)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i!=msgTmp.<ref refid="struct__msg_1a5319cda008478b61e06ddf06c2cf166e" kindref="member">id</ref><sp/>&amp;&amp;<sp/>players[i]!=NULL<sp/>&amp;&amp;<sp/>players[i]-&gt;getReady()){</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>stream;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>senderBuffer.<ref refid="struct__data_1afa7c65aa86c5c877d1b23746b27f7ccd" kindref="member">type</ref>=<ref refid="_defines_8hpp_1a4fb7e7cfa1e05039d679f0275c48ca03" kindref="member">PROTOCOL_REVIVE</ref>;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>msgTmp.<ref refid="struct__msg_1a5319cda008478b61e06ddf06c2cf166e" kindref="member">id</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>x<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>y<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::sprintf(senderBuffer.<ref refid="struct__data_1abcb37fabf89158d59a0469a376d2d5f8" kindref="member">buffer</ref>,</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,stream.str().c_str());</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn.<ref refid="class_connection_1a3dda26c4c789d0f5e54fb50cae606022" kindref="member">send_packet_reliable</ref>(&amp;senderBuffer,strlen(senderBuffer.<ref refid="struct__data_1abcb37fabf89158d59a0469a376d2d5f8" kindref="member">buffer</ref>)+2,i);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msgs.pop();</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn.<ref refid="class_connection_1ace9a66bd4a77270df4587df1405d4033" kindref="member">send_flush</ref>();</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(((<ref refid="struct__data" kindref="compound">_data</ref>*)msgTmp.<ref refid="struct__msg_1a470db8b42735763fc80e93590da2eaf4" kindref="member">buffer</ref>)-&gt;type==<ref refid="_defines_8hpp_1a5e3a03196e1b60cbd0fe39558c74e1ac" kindref="member">PROTOCOL_HIT</ref>){</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/>bulletId,playerId,dmg;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>stream;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>((<ref refid="struct__data" kindref="compound">_data</ref>*)msgTmp.<ref refid="struct__msg_1a470db8b42735763fc80e93590da2eaf4" kindref="member">buffer</ref>)-&gt;buffer;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>&gt;&gt;<sp/>bulletId<sp/>&gt;&gt;<sp/>playerId<sp/>&gt;&gt;<sp/>dmg;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;users;i++)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i!=msgTmp.<ref refid="struct__msg_1a5319cda008478b61e06ddf06c2cf166e" kindref="member">id</ref><sp/>&amp;&amp;<sp/>players[i]!=NULL<sp/>&amp;&amp;<sp/>players[i]-&gt;getReady()){</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>stream;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>senderBuffer.<ref refid="struct__data_1afa7c65aa86c5c877d1b23746b27f7ccd" kindref="member">type</ref>=<ref refid="_defines_8hpp_1a5e3a03196e1b60cbd0fe39558c74e1ac" kindref="member">PROTOCOL_HIT</ref>;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>msgTmp.<ref refid="struct__msg_1a5319cda008478b61e06ddf06c2cf166e" kindref="member">id</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>bulletId<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>playerId<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dmg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::sprintf(senderBuffer.<ref refid="struct__data_1abcb37fabf89158d59a0469a376d2d5f8" kindref="member">buffer</ref>,</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,stream.str().c_str());</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn.<ref refid="class_connection_1a3dda26c4c789d0f5e54fb50cae606022" kindref="member">send_packet_reliable</ref>(&amp;senderBuffer,strlen(senderBuffer.<ref refid="struct__data_1abcb37fabf89158d59a0469a376d2d5f8" kindref="member">buffer</ref>)+2,i);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msgs.pop();</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn.<ref refid="class_connection_1ace9a66bd4a77270df4587df1405d4033" kindref="member">send_flush</ref>();</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataMu.unlock();</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/clemente/projects/Troll-Killers/Server.cpp"/>
  </compounddef>
</doxygen>
